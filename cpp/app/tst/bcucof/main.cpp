
#include <stdio.h>
#include <stdlib.h>
#include <osix/xxstyle.h>
#include <numeric/matrix.h>

int usage() {

  printf ("\n");
  return 0;

}

int main(int argc,char **argv) {

  double cc[16][16]={
    {1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,.0,.0,.0,.0,1.,.0,.0,.0,.0,.0,.0,.0},
    {-3.,.0,.0,3.,.0,.0,.0,.0,-2.,.0,.0,-1.,.0,.0,.0,.0},
    {2.,.0,.0,-2.,.0,.0,.0,.0,1.,.0,.0,1.,.0,.0,.0,.0},
    {.0,.0,.0,.0,1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.,.0,.0,.0},
    {.0,.0,.0,.0,-3.,.0,.0,3.,.0,.0,.0,.0,-2.,.0,.0,-1.},
    {.0,.0,.0,.0,2.,.0,.0,-2.,.0,.0,.0,.0,1.,.0,.0,1.},
    {-3.,3.,.0,.0,-2.,-1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,.0,.0,.0,.0,-3.,3.,.0,.0,-2.,-1.,.0,.0},
    {9.,-9.,9.,-9.,6.,3.,-3.,-6.,6.,-6.,-3.,3.,4.,2.,1.,2.},
    {-6.,6.,-6.,6.,-4.,-2.,2.,4.,-3.,3.,3.,-3.,-2.,-1.,-1.,-2.},
    {2.,-2.,.0,.0,1.,1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,.0,.0,.0,.0,2.,-2.,.0,.0,1.,1.,.0,.0},
    {-6.,6.,-6.,6.,-3.,-3.,3.,3.,-4.,4.,2.,-2.,-2.,-2.,-1.,-1.},
    {4.,-4.,4.,-4.,2.,2.,-2.,-2.,2.,-2.,-2.,2.,1.,1.,1.,1.}
  };
  double ccwp[16][16]={
    {1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
    {-3.,3.,.0,.0,-2.,-1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
    {2.,-2.,.0,.0,1.,1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,.0,.0,.0,.0,1.,.0,.0,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.,.0,.0,.0},
    {.0,.0,.0,.0,.0,.0,.0,.0,-3.,3.,.0,.0,-2.,-1.,.0,.0},
    {.0,.0,.0,.0,.0,.0,.0,.0,2.,-2.,.0,.0,1.,1.,.0,.0},
    {-3.,.0,3.,.0,.0,.0,.0,.0,-2.,.0,-1.,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,-3.,.0,3.,.0,.0,.0,.0,.0,-2.,.0,-1.,.0},
    {9.,-9.,-9.,9.,6.,3.,-6.,-3.,6.,-6.,3.,-3.,4.,2.,2.,1.},
    {-6.,6.,6.,-6.,-3.,-3.,3.,3.,-4.,4.,-2.,2.,-2.,-2.,-1.,-1.},
    {2.,.0,-2.,.0,.0,.0,.0,.0,1.,.0,1.,.0,.0,.0,.0,.0},
    {.0,.0,.0,.0,2.,.0,-2.,.0,.0,.0,.0,.0,1.,.0,1.,.0},
    {-6.,6.,6.,-6.,-4.,-2.,4.,2.,-3.,3.,-3.,3.,-2.,-1.,-2.,-1.},
    {4.,-4.,-4.,4.,2.,2.,-2.,-2.,2.,-2.,2.,-2.,1.,1.,1.,1.}
  };

  int ii=0,jj=0;
  double zero=.0,one=1.;
  double **wt=new double*[16];
  for (ii=0;ii<16;ii++) {
    wt[ii]=new double[16];
    for (jj=0;jj<16;jj++)
      wt[ii][jj]=ccwp[ii][jj];
  }

  /*num::SquareMatrix mm(16,wt);
  num::Matrix mmm(16,16,wt);

  for (ii=0;ii<16;ii++) {
    for (jj=0;jj<16;jj++)
      printf("%4.1f ",mm.m(ii,jj));
    printf("\n");
  }
  printf("\n");
  printf("\n");
  printf("\n");

  mm.invert();

  for (ii=0;ii<16;ii++) {
    for (jj=0;jj<16;jj++)
      printf("%4.1f ",mm.m(ii,jj));
    printf("\n");
  }
  printf("\n");
  printf("\n");
  printf("\n");

  mm.mult(&mmm);

  printf ("%d isidentity [%d]\n",__LINE__,mm.isIdentity(1.e-14));*/

  return 0;

}

