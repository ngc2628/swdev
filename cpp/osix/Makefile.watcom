
PRJROOT       = $(SWDIR)
PRJ           = osix
DESTDIR       = $(LIBDIR)

WFLAGS        = -w3
LFLAGS        = -dll
INCPATH       = -i"$(SWDIR)\cpp" -i"$(SWDIR)\c"
LIBS          = $(LIBDIR)\libnumeric.lib $(LIBDIR)\libauxx.lib $(LIBDIR)\libmkbase.lib 
HEADER        = xxkey.h xxmouse.h xxevent.h xxstyle.h xxshape.h xxtxt.h xxpaint.h
SOURCES       = xxevent.cpp xxstyle.cpp xxshape.cpp xxtxt.cpp xxpaint.cpp
OBJECTS       = xxevent.obj xxstyle.obj xxshape.obj xxtxt.obj xxpaint.obj
TARGET        = lib$(PRJ).dll
TARGETLIB     = lib$(PRJ).lib

CC            = wpp386
CXX           = wpp386
LEX           = flex
YACC          = yacc
DEFINES       = -dOSWINDLL -d_CRT_SECURE_NO_WARNINGS 
CFLAGS        = $(DEFINES) -bd -bm -br -ef -ei -xr -ze -zw $(WFLAGS)
CXXFLAGS      = $(CFLAGS)
LEXFLAGS      = 
LINK          = link
AR            = ar cq
RANLIB        = ranlib -s
COMPRESS      = zip 
RM            = del
MV            = move /Y 
MD            = mkdir
RD            = rmdir /S /Q 


all: PREMK $(TARGET) POSTMK

.cpp.obj:
	$(CC) $(CFLAGS) $(INCPATH) $<

PREMK:
	$(RM) $(DESTDIR)\$(TARGET) 2>nul || echo .
	$(MV) $(OBJDIR)\$(PRJ)\*.obj . 2>nul || echo . 
	$(RD) $(OBJDIR)\$(PRJ) 2>nul || echo .

$(TARGET): $(OBJECTS)   
	$(LINK) $(LFLAGS) -out:$(DESTDIR)\$(TARGET) $(OBJECTS) $(LIBS) 

POSTMK:
	$(MD) $(OBJDIR)\$(PRJ)
	$(MV) *.err $(OBJDIR)\$(PRJ) 
	$(MV) *.obj $(OBJDIR)\$(PRJ) 

clean: 
	$(RM) $(DESTDIR)\$(TARGET) $(DESTDIR)\$(TARGETLIB)
	$(RD) $(OBJDIR)\$(PRJ) 2>nul || echo .


